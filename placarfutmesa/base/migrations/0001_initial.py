# Generated by Django 5.1.4 on 2024-12-17 15:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import placarfutmesa.base.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Associacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('acronym', models.CharField(max_length=20, verbose_name='acronym')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='logo')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cpf', models.CharField(help_text='Enter your 11-digit CPF without punctuation.', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF must be exactly 11 digits without punctuation.', regex='^\\d{11}$')], verbose_name='\x01CPF')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('nickname', models.CharField(blank=True, max_length=150, verbose_name='nickname')),
                ('use_nickname', models.BooleanField(default=False, verbose_name='use nickname')),
                ('birth_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='year of birth')),
                ('category', models.CharField(blank=True, max_length=50, verbose_name='category')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='\x01staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='\x01active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('association', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.associacao')),
            ],
            options={
                'verbose_name': '\x01user',
                'verbose_name_plural': '\x01users',
            },
            managers=[
                ('objects', placarfutmesa.base.models.UserManager()),
            ],
        ),
    ]
